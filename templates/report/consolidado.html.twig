{% extends "base.html.twig" %}
{% block body %}
<div class="container-fluid p-3">
  <form class="form-inline" method="POST" id="filter">
  <div class="form-row align-items-center">
    <div class="col-auto align-self-end">
      <label for="host">Nome do host</label>
      <select class="custom-select mr-sm-2" id="host" name="host">
        <option value selected>Selecione...</option>
        {% for host in hosts %}
            <option value="{{ host }}"{{ app.request.request.get('host') == host ? ' selected' : '' }}>{{ host }}</option>
        {% endfor %}
      </select>
    </div>
    <div class="col-auto align-self-end">
      <label for="item">Nome do item</label>
      <select class="custom-select mr-sm-2" id="item" name="item">
        <option value selected>Selecione...</option>
      </select>
    </div>
    <div class="col-auto align-self-end">
      <label for="data-inicio">Data início</label>
      <input type="date" name="downtime" value="{{ app.request.request.get('downtime') }}" class="form-control" id="data-inicio" required>
      <input type="time" name="downtime-time" value="{{ app.request.request.get('downtime-time') }}" class="form-control" id="downtime-time" />
    </div>
    <div class="col-auto align-self-end">
      <label for="data-fim">Data fim</label>
      <input type="date" name="uptime" value="{{ app.request.request.get('uptime') }}" class="form-control" id="data-fim" required>
      <input type="time" name="uptime-time" value="{{ app.request.request.get('uptime-time') }}" class="form-control" id="uptime-time" />
    </div>
    <div class="col-auto align-self-end text-sm-center">
      <label for="icmp-sim">ICMP</label>
      <div class="form-check form-check-inline m-1">
        <input class="form-check-input" type="radio" name="icmp" id="icmp-sim" value="1"
            {% if app.request.request.get('icmp') == '' or app.request.request.get('icmp') == 1 %}
                checked="checked"
            {% endif %} />
        <label class="form-check-label" for="icmp-sim">Sim</label>
      </div>
      <div class="form-check form-check-inline m-1">
        <input class="form-check-input" type="radio" name="icmp" id="icmp-nao" value="0"
            {% if app.request.request.get('icmp') != '' or app.request.request.get('icmp') == 0 %}
                checked="checked"
            {% endif %} />
        <label class="form-check-label" for="icmp-nao">Não</label>
      </div>
    </div>
    <div class="col-auto align-self-end text-sm-center">
      <label for="separador">Separador CSV</label>
      <div class="form-check form-check-inline m-1">
        <input class="form-check-input" type="radio" name="separador" id="separador-ponto-e-virgula" value=";"
            {% if app.request.request.get('separador') == '' or app.request.request.get('separador') == ';' %}
                checked="checked"
            {% endif %} />
        <label class="form-check-label" for="separador-ponto-e-virgula">;</label>
      </div>
      <div class="form-check form-check-inline m-1">
        <input class="form-check-input" type="radio" name="separador" id="separador-virgula" value=","
            {% if app.request.request.get('separador') == ',' %}
                checked="checked"
            {% endif %} />
        <label class="form-check-label" for="separador-virgula">,</label>
      </div>
    </div>
    <div class="col-auto align-self-end">
      <button type="submit" class="btn btn-primary" name="formato" value="html">Gerar relatório</button>
      <button type="submit" class="btn btn-primary" name="formato" value="csv">Baixar CSV</button>
    </div>
  </div>
  </form>
</div>
{% if datatable is defined %}
<div id="result"></div>
{% endif %}
{% if viewHtml is defined %}
    <div class="container-fluid p-3">
        {{ viewHtml|raw }}
    </div>
{% endif %}
{% endblock %}
{% block javascripts %}
{{ parent() }}
{% if datatable is defined %}
<script src="{{ asset('bundles/datatables/js/datatables.js') }}"></script>
<script>
$(document).ready( function () {
  $('#host').change(function(){
    $.getJSON("{{ path('report_list_item') }}",{host: $(this).val(), ajax: 'true'}, function(j){
      var options = '<option value selected>Selecione...</option>';
      for (var i = 0; i < j.length; i++) {
        options += '<option value="' + j[i] + '">' + j[i] + '</option>';
      }
      $("#item").html(options);
    })
  });
  $('#filter').submit(function(e) {
    if (this.checkValidity()) {
      if ($("button[type=submit]:focus").val() == 'html') {
        e.preventDefault();
        dt.search( '' )
          dt.columns().search( '' )
          time = $('#downtime-time').val() ? ' ' + $('#downtime-time').val() : '';
          dt.column('downtime:name').search($('#data-inicio').val() + time)
          time = $('#downtime-time').val() ? ' ' + $('#uptime-time').val() : '';
          dt.column('uptime:name').search($('#data-fim').val() + time)
          dt.column('host:name').search($('#host').val())
          dt.column('item:name').search($('#item').val())
          dt.search('icmp='+$('input[name=icmp]:checked').val())
          dt.clear().draw()
        }
      }
  });
  toSeconds = function(time) {
    var c = time.split(':');
    var seconds = (+c[0]) * 60 * 60 + (+c[1]) * 60 + (+c[2]); 
    return seconds;
  }
  fromSeconds = function(totalSeconds) {
    hours = Math.floor(totalSeconds / 3600);
    totalSeconds %= 3600;
    minutes = Math.floor(totalSeconds / 60);
    seconds = totalSeconds % 60;
    return hours.toString().padStart(2, '0')+':'+minutes.toString().padStart(2, '0')+':'+seconds.toString().padStart(2, '0')
  }
  $('#result').initDataTables({{ datatable_settings(datatable) }}, {
    drawCallback: function(settings) {
      if (dt.data().length) {
        dt.column('item:name').visible(dt.data()[0].item.length);
      }
    },
    fnFooterCallback: function (nRow, data, iStart, iEnd, aiDisplay) {
      minus = data.length? 0 : 1;
      if (this.find('tfoot').length) {
        var tfoot = this.find('tfoot');
      } else {
        var tfoot = $('<tfoot>');
        this.find('th').each(function(a,b) {
          tfoot.append('<td class="'+b.getAttribute('class')+'"></td>')
        });
        tfoot.insertBefore($(this).find('tbody'));
      }
      $(tfoot).toggle(data.length>0);

      totalDowntime = 0;
      totalUptime = 0;
      data.forEach(function(a){
        totalDowntime += toSeconds(a.downtime)
        totalUptime += toSeconds(a.uptime)
      });

      if (data.length && $('input[name=icmp]:checked').val() == 0) {
        $(tfoot).find('td.col-item').show()
      } else {
        $(tfoot).find('td.col-item').hide()
      }
      $(tfoot).find('.col-downtime').html('<strong>'+fromSeconds(totalDowntime)+'</strong>')
      $(tfoot).find('.col-uptime').html('<strong>'+fromSeconds(totalUptime)+'</strong>')
    }
  })
});
</script>
{% endif %}
{% endblock %}